{"version":3,"sources":["api.js","Components/Section.js","Components/Loader.js","Components/Message.js","assets/noPosterSmall.png","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","term","query","id","append_to_response","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","noPoster","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","Number","isNaN","router","path","exact","component","Home","TV","render","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e8cd30b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '025e5601fbc5708ed29d4d165bf21a97',\n    language: 'en-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  search: (term) =>\n    api.get('search/movie', {\n      params: {\n        query: term,\n      },\n    }),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  search: (term) =>\n    api.get('search/tv', {\n      params: {\n        query: term,\n      },\n    }),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 25px;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport noPoster from '../assets/noPosterSmall.png';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  background-position: center center;\n  border-radius: 4px;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : noPoster}></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport { Helmet } from 'react-helmet-async';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import { moviesApi } from 'api';\nimport React from 'react';\nimport HomePresenter from './HomePresenter';\n\nexport default class HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({ error: \"Can't find movie informations.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport { Helmet } from 'react-helmet-async';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>TV Shows | Nomflix</title>\n      </Helmet>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              rating={show.vote_average}\n              isMovie={false}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              rating={show.vote_average}\n              isMovie={false}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today Shows\">\n          {airingToday.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              rating={show.vote_average}\n              isMovie={false}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import { tvApi } from 'api';\nimport React from 'react';\nimport TVPresenter from './TVPresenter';\n\nexport default class TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({ error: \"Can't find TV informations.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport { Helmet } from 'react-helmet-async';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResult, tvResult, searchTerm, error, loading, handleSubmit, updateTerm }) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV Show...\" value={searchTerm} onChange={updateTerm}></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResult && movieResult.length > 0 && (\n          <Section title=\"Movie Result\">\n            {movieResult.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResult && tvResult.length > 0 && (\n          <Section title=\"TV Show Result\">\n            {tvResult.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                isMovie={false}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResult && movieResult && tvResult.length === 0 && movieResult.length === 0 && <Message text=\"Noting found\" color=\"#95a5a6\" />}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResult: PropTypes.array,\n  tvResult: PropTypes.array,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport SearchPresenter from './SearchPresenter';\n\nexport default class SearchContainer extends React.Component {\n  state = {\n    movieResult: null,\n    tvResult: null,\n    searchTerm: '',\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResult },\n      } = await moviesApi.search(searchTerm);\n\n      const {\n        data: { results: tvResult },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({ movieResult, tvResult });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResult, tvResult, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResult}\n        tvResult={tvResult}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${(props) => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport noPoster from '../../assets/noPosterSmall.png';\nimport { Helmet } from 'react-helmet-async';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`} />\n      <Content>\n        <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original/${result.poster_path}` : noPoster} />\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n            <Divider>·</Divider>\n            <Item>{result.runtime || result.episode_run_time} min</Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres && result.genres.map((genre, index) => (index === result.genres.length - 1 ? genre.name : `${genre.name} / `))}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport DetailPresenter from './DetailPresenter';\n\nexport default class DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: '',\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    const parsedId = Number(id);\n    if (isNaN(parsedId)) {\n      return push('/');\n    }\n\n    const { isMovie } = this.state;\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Header from 'Components/Header';\nimport Detail from 'Routes/Detail';\n\nconst router = () => {\n  return (\n    <Router>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv\" exact component={TV} />\n          <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </>\n    </Router>\n  );\n};\n\nexport default router;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration:none;\n    color:inherit;\n  }\n  *{\n    box-sizing:border-box;\n  }\n  body{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size:12px;\n    background-color:rgba(20, 20, 20, 1);\n    color:white;\n    padding-top:50px;\n  }\n`;\n\nexport default globalStyles;\n","import Router from 'Components/Router';\nimport GlobalStyles from './GlobalStyles';\nimport { HelmetProvider } from 'react-helmet-async';\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <GlobalStyles />\n      <Router />\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}